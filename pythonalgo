import pandas as pd
from sklearn.ensemble import RandomForestClassifier
from sklearn.model_selection import train_test_split

# Load the dataset
df = pd.read_csv('Python_dataset.csv')

# Define features and target variable
features = ['Sex', 'Race', 'Hispanic Origin', 'Age Group']
target = 'estimate'

# Convert categorical features into numerical values
df[features] = df[features].astype('category')
df[features] = df[features].apply(lambda x: x.cat.codes)

# Split the data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(df[features], df[target], test_size=0.2, random_state=42)

# Create a Random Forest classifier
rf = RandomForestClassifier(n_estimators=100, random_state=42)

# Train the model
rf.fit(X_train, y_train)

# Predict the suicide rates for the test data
y_pred = rf.predict(X_test)

# Evaluate the model
accuracy = rf.score(X_test, y_test)
print('Accuracy:', accuracy)
